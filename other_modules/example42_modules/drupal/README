Puppet module: drupal

# Written by Lab42 #
# http://www.Example42.com

Licence: GPLv3

DESCRIPTION:
This module installs and manages drupal.
It's based on Example42's module structure and features standard and
extended classes for automatic monitoring, backup and firewalling.

All the variables used in this module are defined in the drupal::params class
(File: $MODULEPATH/drupal/manifests/params.pp). Here you can:
- Set default settings and filtering module's specific Users variables
- Add selectors for internal variables to adapt the module to different OSes
- Review and eventually change default settings for variables that affect the
  Example42 extended classes.

Customizations for different projects and logic on how to populate configuration
files should be placed in the $my_project classes.


MODULE'S SPECIFIC USER VARIABLES:
drupal_version              # Which version of Drupal you want to use (5|6|7). Note that if you use 
                              packages the choice depends on their availability on your OS. Default: 7
drupal_use_package          # (yes|no) Set how you want to install Drupal, via the OS
                              specific package or via the Drush command line. Default: no
drupal_drush_url            # Complete url to retrieve drush tarball
drupal_basedir              # Directory where Drupal is installed (when not using packages).
                            # Default: /var/www/drupal
drupal_sitesdir             # Directory where Drupal sites are placed (when not using packages).
                            # Default: $drupal_basedir/sites
drupal_extra                # Set to yes to include a set of extra modules and themes. Default no

USAGE:
# Standard Classes 
include drupal              # Install and run drupal 

include drupal::absent      # Remove drupal package.
include drupal::debug       # Used for debugging purposes (not resource hungry)
                         # Automatically included if $debug=yes
                         # Requires Example42's puppet::params and puppet::debug

# Extended Classes (generally require storeconfigs)
include drupal::monitor     # Monitor drupal
                         # Automatically included if $monitor=yes
                         # Requires Example42's monitor module
include drupal::backup      # Backup drupal data
                         # Automatically included if $backup=yes
                         # Requires Example42's backup module
include drupal::firewall    # Manages firewall rules for drupal service
                         # Automatically included if $firewall=yes
                         # Requires Example42's firewall module

# Generic define to set parameters in the main configuration file. EXPERIMENTAL.
drupal::conf { "ParameterName": value="YourValue"} # Generic 

# Module specific classes
drupal::drush            # Installs Drupal's shell
drupal::modules          # Installs a predefined set of Drupal modules

# Module specific defines
drupal::module           # Installs and manages Drupal modules
drupal::theme            # Installs and manages Drupal themes
drupal::site             # Installs and manages Drupal sites

EXAMPLE42 GENERAL VARIABLES:
Example42 modules collection uses some general variables that can influence the
behaviour of this module. You can happily live without considering or setting them,
but they can be useful to get many useful features out of the box.
$my_project - If set, permits you to alter and customize the module behaviour
  and files's deploy logic in custom project classes
$my_project_onmodule - If set to yes your project classes are looked in a
  dedicated project module:
  - $my_project_onmodule not set -> Module autoloads drupal::$my_module
                                    (MODULEPATH/drupal/manifests/$my_project.pp)
  - $my_project_onmodule == yes  -> Module autoloads $my_module::drupal
                                    (MODULEPATH/$my_project/manifests/drupal.pp)
$base_source - Lets you define an alternative source for static files:
  - $base_source not set -> Files are looked in puppet://$servername/ (the PuppetMaster)
  - $base_source set -> Files are in $base_source ( Ex: puppet://$servername/$my_module ) 
  Note that the module automatically manages the different paths for Puppet pre 0.25
$debug - If set to yes writes in /var/lib/puppet/debug/ useful debugging info

VARIABLES FOR EXTENDED MODULES:
$monitor - Set to "yes" to enable auto monitoring classes 
$monitor_tool - Defines the monitor tools to activate (At leat one, can be an array)
Check drupal/manifests/monitor.pp for more info on drupal monitoring related variables.

$backup - Set to "yes" to enable auto backuping classes 
$backup_tool - Defines the backup tools to activate (At leat one, can be an array)
Check drupal/manifests/backup.pp for more info on drupal backuping related variables.


DEPENDENCIES:
Standard classes generally don't need external modules.
Extended classes need the relevant external modules and the Example42 "common" module.
drupal::conf generic infile configuration define needs the Example42 "common" module


OPERATING SYSTEMS SUPPORT (Planned, Development, Testing, Production):
RedHat/Centos 5 : Testing
RedHat/Centos 6 : Testing
Debian 5        : Testing
Debian 6        : Planned
Ubuntu 8.04     : Testing
Ubuntu 10.04    : Testing
SLES 10         : Planned
SLES 11         : Planned
