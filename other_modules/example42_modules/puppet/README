Puppet module: puppet

# Written by Lab42 #
# http://www.example42.com

Licence: GPLv3


DESCRIPTION:
This module installs and manages puppet.
Standard and extended classes are available.
Decide and customize how you want to define configuration files: static files, templates, infile modifications...


USER VARIABLES:
In order to customize the behaviour of the module you can set the following variables:
$puppet_server (default: "puppet") - Defines the hostname of the puppet master (needed for puppet and puppet::master)
$puppet_allow  (default:  "*.$domain" , "127.0.0.0") - Defines the acls on PuppetMaster's fileserver.conf
$puppet_nodetool  (default: undefined) - Use to include an eternal node tool ("dashboard" or "foreman")
$puppet_externalnodes  (default: no) - Use the external tool as external node classifier (if "yes" here, $puppet_nodetool must be defined)
$puppet_passenger  (default: no) - Use Apache's mod ruby (Passenger) instead of default Webrick
$puppet_storeconfigs  (default: no) - Use storeconfigs, needed for exported resources (as in Example42's extended classes)
$puppet_storeconfigs_thin  (default: yes) - Use thin storeconfigs
$puppet_db  (default: sqlite) - Define DB backend if you activate storeconfigs ("sqlite" or "mysql")
$puppet_db_server  (default: localhost) - Define DB server host (used if $puppet_db = "mysql")
$puppet_db_user  (default: root) - Define DB access user (used if $puppet_db = "mysql")
$puppet_db_password  (default: undefined) - Define DB access password (used if $puppet_db = "mysql")
$puppet_inventoryserver  (default: undefined) - Define if you want to use the inventory service (Availble form Puppet 2.6.7)
                                              - Set "localhost" if the inventory service is on the local puppetmaster
                                              - Set the hostname of the inventory service to use a remote puppetmaster
                                              Note that the db settings are the same used for storeconfigs.

USAGE:
# Standard Classes 
include puppet              # Install and run puppet 
if ($puppet_server_local == true) or ($puppet_server == "$fqdn") Puppemaster is automatically installed

include puppet::disable     # Disable puppet service.
include puppet::disableboot # Disable puppet service at boot time, but don't stop if it's running.
include puppet::absent      # Remove puppet package.

# Extended Classes (require storeconfigs)
include puppet::monitor     # Monitor puppet  Automatically included if $monitor=yes
include puppet::backup      # Backup puppet data - Automatically included if $backup=yes
include puppet::firewall    # Manages firewall rule for puppet service - Automatically included if $firewall=yes

# Extra Classes

# Generic main configuration infile modification Define
puppet::conf { "ParameterName": value="YourValue"} 


DEPENDENCIES:
Standard classes generally don't need external modules.
Extended classes need the relevant external modules (import monitor ; import backup ... ) and the "common" module (import common)
puppet::conf generic infile configuration define needs the "common" module
Check on individual Extra classes and defines if there are specific requirements (generally only the common module).
