head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2010.07.22.21.07.02;	author wflynn;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.22.16.21.37;	author wflynn;	state Exp;
branches;
next	1.1;

1.1
date	2010.07.22.14.39.21;	author wflynn;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Use new mh_* subs
@
text
@#!/bin/bash
#
# Script for checking various parts of cron execution, logging, monitoring, etc.
#
# $Id: cron_tester.sh,v 1.2 2010/07/22 16:21:37 wflynn Exp wflynn $
#
# wflynn 7/10
#

#  Import vars from source.sh

. /etc/manhunt/source.sh

TEST_STATUS=${1}
LOG=${CARE_LOG}
STATLOG=${STAT_LOG}

if [ -z ${TEST_STATUS} ]
then
    echo "Usage: $0 <status_to_test ($OK, $WARNING, $CRITICAL, $UNKNOWN)>"
fi

mh_user_check "care"
mh_init

# Make Sure Status Log Is Accessible and set inital status
if [ "`echo $OK > $STATLOG`" != "" ]
then
    echo "Cannot write to status logfile."
    mh_exit $CRITICAL
fi

# Log Start Of Script
echo START $APPNAME `date` >> $LOG

# Log Test Status
echo "$APPNAME Testing Status $TEST_STATUS `date`" >> $LOG

# Set Test Status
echo "$TEST_STATUS" > ${STATLOG}

# Report Test Status
echo "$APPNAME Has Set Status `cat $STATLOG` `date`" >> $LOG

#mh_exit
mh_exit $TEST_STATUS

@


1.2
log
@SYS-3247 Cron script for testing logging, etc
@
text
@d5 1
a5 1
# $Id: cron_tester.sh,v 1.1 2010/07/22 14:39:21 wflynn Exp wflynn $
d23 2
a24 13
# Run as care.
if [ "$UID" -ne "$CARE_UID" ]
then
    echo "Must be care to run this script."
    exit $CRITICAL
fi

# Make Sure Log Is Accessible
if [ "`touch $LOG`" != "" ]
then
    echo "Cannot write to logfile."
    exit $CRITICAL
fi
d30 1
a30 1
    exit $CRITICAL
d45 2
a46 2
# Exit
exit $TEST_STATUS
@


1.1
log
@Initial revision
@
text
@d5 1
a5 1
# $Id: $
d13 46
@
