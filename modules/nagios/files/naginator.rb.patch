--- naginator.rb  2010/10/21 13:14:19 1.1
+++ naginator.rb  2010/10/21 14:10:07
@@ -7,7 +7,6 @@
 
 # The base class for all Naginator providers.
 class Puppet::Provider::Naginator < Puppet::Provider::ParsedFile
-    NAME_STRING = "## --PUPPET_NAME-- (called '_naginator_name' in the manifest)"
     # Retrieve the associated class from Nagios::Base.
     def self.nagios_type
         unless defined?(@nagios_type) and @nagios_type
@@ -25,14 +24,16 @@
 
     def self.parse(text)
         begin
-            Nagios::Parser.new.parse(text.gsub(NAME_STRING, "_naginator_name"))
+            Nagios::Parser.new.parse(text)
         rescue => detail
             raise Puppet::Error, "Could not parse configuration for %s: %s" % [resource_type.name, detail]
         end
     end
 
     def self.to_file(records)
-        header + records.collect { |record| record.to_s }.join("\n").gsub("_naginator_name", NAME_STRING)
+ regex = Regexp.new("^((.*)" + nagios_type.namevar.to_s + "(.*))$")
+ replacement = ( nagios_type.namevar.to_s == '_naginator_name' ) ? '\2name\3' : '\1' +"\n" + '\2name\3'
+        header + records.collect { |record| record.to_s }.join("\n").gsub(regex, replacement)
     end
 
     def self.skip_record?(record)           
