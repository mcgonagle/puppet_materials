<!--
    - Resin 3.1.11 configuration file created for <%= fqdn %> by puppet.
-->
<resin xmlns="http://caucho.com/ns/resin" xmlns:resin="http://caucho.com/ns/resin/core">
  
  <!-- adds all .jar files under the resin/lib directory -->
  <class-loader>
    <tree-loader path="${resin.home}/ext-lib" />
    <tree-loader path="${resin.root}/ext-lib" />
    <tree-loader path="${resin.home}/lib" />
    <tree-loader path="${resin.root}/lib" />
  </class-loader>

  <!--
      - Management configuration
      -
      - Remote management requires at least one enabled admin user.
  -->
  <management path="${resin.root}/admin">
    <user name="admin" password="password" disable="true" />
    <resin:if test="${resin.professional}">
      <deploy-service />
      <jmx-service />
      <log-service />
      <xa-log-service />
    </resin:if>
  </management>

  <!--
      - Logging configuration for the JDK logging API.
  -->
  <log name='' level='info' path='stdout:' timestamp='[%H:%M:%S.%s] ' />
  <log name='com.caucho.java' level='info' path='stdout:' timestamp='[%H:%M:%S.%s] ' />
  <log name='com.caucho.loader' level='info' path='stdout:' timestamp='[%H:%M:%S.%s] ' />
  <log name='com.caucho.server.security' level='info' path='stdout:' timestamp='[%H:%M:%S.%s] ' />
  <log name="com.manmatch" path="log/dlist.log" level="info" />

  <!--
      - 'info' for production
      - 'fine' or 'finer' for development and troubleshooting
  -->
  <logger name="com.caucho" level="info" />
  <logger name="com.caucho.java" level="info" />
  <logger name="com.caucho.loader" level="info" />
  <logger name="com.caucho.server.security" level="info" />

  <!--
      - For production sites, change dependency-check-interval to something
      - like 600s, so it only checks for updates every 10 minutes.
  -->
  <dependency-check-interval>2600s</dependency-check-interval>

  <!--
      - SMTP server for sending mail notifications
  -->
  <system-property mail.smtp.host="127.0.0.1" />
  <system-property mail.smtp.port="25" />

  <!--
      - Sets the default character encoding to utf-8
      -
      - <character-encoding>utf-8</character-encoding>
  -->

  <!--
      - You can change the compiler to "javac", "eclipse" or "internal".
  -->
  <javac compiler="internal" args="-source 1.5"/>

  <system-property javax.xml.parsers.DocumentBuilderFactory
                   ="com.caucho.xml.parsers.XmlDocumentBuilderFactory"/>
  <system-property javax.xml.parsers.SAXParserFactory
                   ="com.caucho.xml.parsers.XmlSAXParserFactory"/>

  <system-property dlist.transactionManagerLookupClass="org.hibernate.transaction.ResinTransactionManagerLookup"/>

  <!-- Security providers.
       - <security-provider>
       -    com.sun.net.ssl.internal.ssl.Provider
       - </security-provider>
  -->

  <!-- Uncomment to use Resin's XML implementations
       -
       - <system-property javax.xml.parsers.DocumentBuilderFactory
       -                 ="com.caucho.xml.parsers.XmlDocumentBuilderFactory"/>
       - <system-property javax.xml.parsers.SAXParserFactory
       -                 ="com.caucho.xml.parsers.XmlSAXParserFactory"/>
  -->

  <cluster id="app-tier">
    <!-- sets the content root for the cluster, relative to server.root -->
    <root-directory>.</root-directory>
    <server-default>
      <!-- The http port -->
      <http address="*" port="8080" />

      <http port="443">
        <openssl>
          <certificate-key-file>keys/dlist.key</certificate-key-file>
          <certificate-file>keys/dlist.com.crt</certificate-file>
          <certificate-chain-file>keys/dlistchain.txt</certificate-chain-file>
          <password>rj21x4t</password>
          <cipher-suite>HIGH:!SSLv2:!ADH:!kEDH:!aNULL:!eNULL:!NULL</cipher-suite>
        </openssl>
      </http>

      <!--
          - The JVM arguments
      -->
      <jvm-arg>-Xmx2048m</jvm-arg>
      <jvm-arg>-Xms500m</jvm-arg>
      <jvm-arg>-Xss1m</jvm-arg>
      <jvm-arg>-Xdebug</jvm-arg>
      <jvm-arg>-XX:PermSize=128M</jvm-arg>
      <jvm-arg>-XX:MaxPermSize=256M</jvm-arg>
      <jvm-arg>-XX:+UseParallelGC</jvm-arg>
      <jvm-arg>-XX:+PrintGCDetails</jvm-arg>
      <jvm-arg>-XX:+PrintGCTimeStamps</jvm-arg>
      <jvm-arg>-Dcom.sun.management.jmxremote</jvm-arg>

      <!--
          - Uncomment to enable admin heap dumps
          - <jvm-arg>-agentlib:resin</jvm-arg>
      -->

      <!--
          - arguments for the watchdog process
      -->
      <watchdog-jvm-arg>-Dcom.sun.management.jmxremote</watchdog-jvm-arg>
      <watchdog-port>6600</watchdog-port>

      <!--
          - Configures the minimum free memory allowed before Resin
          - will force a restart.
      -->
      <memory-free-min>1M</memory-free-min>

      <!-- Maximum number of threads. -->
      <thread-max>256</thread-max>

      <!-- Configures the socket timeout -->
      <socket-timeout>65s</socket-timeout>

      <!-- Configures the keepalive -->
      <keepalive-max>128</keepalive-max>
      <keepalive-timeout>15s</keepalive-timeout>

      <!--
          - If starting bin/resin as root on Unix, specify the user name
          - and group name for the web server user.
          -
          - <user-name>resin</user-name>
          - <group-name>resin</group-name>
      -->
    </server-default>

    <!-- define the servers in the cluster -->
    <server id="" address="127.0.0.1" port="6800" />
    <!--
        - Configures the persistent store for single-server or clustered
        - in Resin professional.

<resin:if test="${resin.professional}">
<persistent-store type="cluster">
<init path="session"/>
</persistent-store>
</resin:if>
    -->

    <!--
        - For security, use a different cookie for SSL sessions.
        - <ssl-session-cookie>SSL_JSESSIONID</ssl-session-cookie>
    -->
    <!--
        - Enables the cache (available in Resin Professional)
    -->
    <resin:if test="${resin.professional}">
      <cache path="cache" memory-size="8M">
        <!-- Vary header rewriting for IE -->
        <rewrite-vary-as-private />
      </cache>
    </resin:if>

    <!--
        - Enables periodic checking of the server status and
        - check for deadlocks..
        -
        - All servers can add <url>s to be checked.
    -->
    <resin:if test="${resin.professional}">
      <ping try-count="33">
        <!-- <url>http://localhost:8080/test-ping.jsp</url> -->
      </ping>
    </resin:if>

    <!--
        - Defaults applied to each web-app.
    -->
    <web-app-default>
      <prologue>
        <!--
            - Extension library for common jar files.  The ext is safe
            - even for non-classloader aware jars.  The loaded classes
            - will be loaded separately for each web-app, i.e. the class
            - itself will be distinct.
        -->
        <class-loader>
          <tree-loader path="${resin.root}/ext-webapp-lib" />
        </class-loader>

        <!--
            - Enable EL expressions in Servlet and Filter init-param
        -->
        <allow-servlet-el />
      </prologue>

      <!--
          - Sets timeout values for cacheable pages, e.g. static pages.
      -->
      <cache-mapping url-pattern="/" expires="5s" />
      <cache-mapping url-pattern="*.gif" expires="60s" />
      <cache-mapping url-pattern="*.jpg" expires="60s" />
      <cache-mapping url-pattern="*.png" expires="60s" />

      <!--
          - for security, disable session URLs by default.
      -->
      <session-config>
        <enable-url-rewriting>false</enable-url-rewriting>
      </session-config>
      <!--
          - For security, set the HttpOnly flag in cookies.
          - <cookie-http-only/>
      -->

      <!--
          - Some JSP packages have incorrect .tld files.  It's possible to
          - set validate-taglib-schema to false to work around these packages.
      -->
      <jsp>
        <validate-taglib-schema>true</validate-taglib-schema>
        <fast-jstl>true</fast-jstl>
      </jsp>

      <!-- DLIST-1010 -->
      <rewrite-dispatch>
        <redirect regexp="^/robots.txt" target="/robots_noindex.txt"/>
      </rewrite-dispatch>

    </web-app-default>

    <!-- includes the app-default for default web-app behavior -->
    <resin:import path="${resin.home}/conf/app-default.xml" />

    <resource jndi-name="jdbc/mysql">
      <type>com.mchange.v2.c3p0.ComboPooledDataSource</type>
      <init>
        <user>dlistuser</user>
        <password>dlistpwd</password>
        <driverClass>com.mysql.jdbc.Driver</driverClass>
        <jdbcUrl><%= scope.lookupvar("jdbc_url_master") %></jdbcUrl>
        <initialPoolSize>10</initialPoolSize>
        <maxPoolSize>150</maxPoolSize>
        <minPoolSize>10</minPoolSize>
        <acquireIncrement>10</acquireIncrement>
        <acquireRetryAttempts>0</acquireRetryAttempts>
        <maxIdleTimeExcessConnections>30</maxIdleTimeExcessConnections>
        <idleConnectionTestPeriod>250</idleConnectionTestPeriod>
        <preferredTestQuery>/* ping */ select 1</preferredTestQuery>
      </init>
    </resource>
    <resource jndi-name="jdbc/mysqlReadOnly">
      <type>com.mchange.v2.c3p0.ComboPooledDataSource</type>
      <init>
        <user>dlistuser</user>
        <password>dlistpwd</password>
        <driverClass>com.mysql.jdbc.Driver</driverClass>
        <jdbcUrl><%= scope.lookupvar("jdbc_url_slave") %></jdbcUrl>
        <initialPoolSize>10</initialPoolSize>
        <maxPoolSize>150</maxPoolSize>
        <minPoolSize>10</minPoolSize>
        <acquireIncrement>10</acquireIncrement>
        <acquireRetryAttempts>0</acquireRetryAttempts>
        <maxIdleTimeExcessConnections>30</maxIdleTimeExcessConnections>
        <idleConnectionTestPeriod>250</idleConnectionTestPeriod>
        <preferredTestQuery>/* ping */ select 1</preferredTestQuery>
      </init>
    </resource>

    <!--
        - Default host configuration applied to all virtual hosts.
    -->
    <host-default>
      <!--
          - With another web server, like Apache, this can be commented out
          - because the web server will log this information.
      -->
      <!--
          <access-log path='logs/access.log' format='%h %l %u %t "%r" %s %b "%{Referer}i" "%{User-Agent}i" "%{Cookie}i"' rollover-period='1D' rollover-count='2' archive-format='access-%Y%m%d.log.gz' />
      -->
      <!-- creates the webapps directory for .war expansion -->

      <web-app-deploy path="webapps" />

      <!-- creates the deploy directory for .ear expansion -->

      <!--
          <ear-deploy path="deploy">
          <ear-default>
          <ejb-server>
          <config-directory>WEB-INF</config-directory>
          </ejb-server>
          </ear-default>
          </ear-deploy>
      -->

      <!-- creates the deploy directory for .rar expansion -->
      <resource-deploy path="deploy" />

    </host-default>

    <!-- configures a deployment directory for virtual hosts -->
    <host-deploy path="hosts">
      <host-default>
        <resin:import path="host.xml" optional="true" />
      </host-default>
    </host-deploy>


    <authenticator type='com.caucho.server.security.JdbcAuthenticator'>
      <init>
        <data-source>jdbc/mysql</data-source>
        <password-query>SELECT user_pass from mp_userinfo ui INNER JOIN mp_userprofile up ON ui.profile_id=up.profile_id WHERE profile_name=?</password-query>
        <cookie-auth-query>SELECT profile_name FROM mp_userprofile up INNER JOIN mp_userinfo ui ON ui.profile_id=up.profile_id WHERE cookie=?</cookie-auth-query>
        <cookie-auth-update>UPDATE mp_userinfo ui INNER JOIN mp_userprofile up ON ui.profile_id=up.profile_id SET cookie=? WHERE up.profile_name=?</cookie-auth-update>        <role-query>SELECT rolename FROM mp_userinfo ui INNER JOIN mp_userprofile up ON ui.profile_id=up.profile_id WHERE up.profile_name=?</role-query>        <cookie-logout>true</cookie-logout>
        <cookie-domain><%= scope.lookupvar("main_domain") %></cookie-domain>

        <password-digest>
          <realm>resin</realm>
          <algorithm>md5</algorithm>
          <format>base64</format>
        </password-digest>
      </init>
    </authenticator>

    <% scope.lookupvar("redirect_files").each do |redirect_file| -%>
    <resin:import path="${resin.home}/conf/<%= redirect_file %>" optional="true"/>
    <% end -%>

    <host host-name="<%= scope.lookupvar("main_domain") %>" root-directory="<%= scope.lookupvar("main_domain_root_directory") %>">
    <% scope.lookupvar("host_alias").each do |val| -%>
    <host-alias><%= val %></host-alias>
    <% end -%>
    <stdout-log path="${resin.home}/log/resin-web-stdout.log" timestamp="[%Y-%m-%d %H:%M:%S.%s]" rollover-period="1D" rollover-count="2" archive-format="stdout-%Y%m%d.log.gz" />
    <stderr-log path="${resin.home}/log/resin-web-stderr.log" timestamp="[%Y-%m-%d %H:%M:%S.%s]" rollover-period="1D" rollover-count="2" archive-format="stderr-%Y%m%d.log.gz" />
    <web-app id='/' root-directory="/opt/resin/webapps/ROOT" archive-path="/usr/local/stage/mnuss/dlist-web.war">
      <error-page error-code='403' location='/signupnow.do' />
      <error-page error-code='404' location='/404.html' />
      <error-page error-code='500' location='/500.html' />
      <session-config session-timeout='30' cookie-domain='www.dlist.com' />

      <login-config auth-method='form'>
        <form-login-config>
          <form-login-page>/welcome.do</form-login-page>
          <form-error-page>/signupnow.do</form-error-page>
        </form-login-config>
      </login-config>

      <filter filter-name='rewrite' filter-class='com.caucho.filters.RewriteFilter'>
        <init>
          <rewrite pattern="/hx$" target="http://<%= scope.lookupvar("media_domain") %>/content/hx/index.html" />
          <rewrite pattern="/([a-zA-Z0-9_\\-]+)$" target="/viewprofile.do?pn=$1" />
        </init>
      </filter>
      <filter-mapping url-pattern='/*' filter-name='rewrite' />
      <filter filter-name="gzip" filter-class="com.caucho.filters.GzipFilter" />
      <filter-mapping url-pattern="/*" filter-name="gzip" />
    </web-app>
    <startup-mode>automatic</startup-mode>
  </host>


  <host id="<%= scope.lookupvar("connector_domain") %>" root-directory="/home/dlistConnector/">
  <stdout-log path="${resin.home}/log/resin-connector-stdout.log" timestamp="[%Y-%m-%d %H:%M:%S.%s]" rollover-period="1D" rollover-count='2' archive-format='resin-connector-stdout-%Y%m%d.log.gz'/>
  <stderr-log path="${resin.home}/log/resin-connector-stderr.log" timestamp="[%Y-%m-%d %H:%M:%S.%s]" rollover-period="1D" rollover-count='2' archive-format='resin-connector-stderr-%Y%m%d.log.gz'/>
  <web-app id='/' document-directory="public_html/" archive-path="/usr/local/stage/mnuss/dlist-connector.war">
    <error-page error-code='403' location='/403.html'/>
    <error-page error-code='404' location='/403.html'/>
    <error-page error-code='500' location='/403.html'/>
    <session-config session-timeout='30'
                    cookie-domain='<%= scope.lookupvar("connector_domain") %>' />
  </web-app>
  <startup-mode>automatic</startup-mode>
</host>

</cluster>
</resin>
