#!/bin/bash

. /etc/manhunt/source.sh

DATE=`date +%Y_%m_%d`
OUTFILE="MANHUNT_sub_${DATE}.csv"
PATH="/home/care/exacttarget/"

OUTFILE_PATH="${PATH}/${OUTFILE}"
PASS=${V4_PW}
USER=${V4_USER}
USERDB=${V4_USERDB}
MYSQL="/usr/bin/mysql" ## Special Override
SOCKET="/data02/multi_mysql/mysql_B/mysql.sock"
EXACT_USER=${EXACT_TARGET_USER}
LOG=$CARE_LOG.$DATE
DATE_CMD="/bin/date"

cd ${PATH}

if [ "$UID" -ne "$CARE_UID" ]
    then
      echo "Must be care to run this script."
      exit $ERROR
fi

if [ "`$MYSQL -u $USER -h $EXACT_TARGET_DATABASE_CLIENT -p${PASS} ${USERDB} -e 'show databases'`" == "" ]
    then
      echo "Cannot connect to database."
      exit $ERROR
fi

if [ "`${TOUCH} $LOG`" != "" ]
    then
      echo "Cannot write to logfile."
      exit $ERROR
fi
                   

echo "Starting ExactTarget Email List." >> $LOG
echo " " >> $LOG
echo "START $APPNAME `${DATE_CMD}`" >> $LOG

cd ${PATH}

## We can't use this line:
## INTO OUTFILE '/tmp/foo' FIELDS TERMINATED BY ','  OPTIONALLY ENCLOSED BY '"' LINES TERMINATED BY '\n'
## and we have to do something like this...
## sed 's/\t/","/g;s/^/"/;s/$/"/;s/\n//g'

echo "Creating user dump from mysql query." >> $LOG
${CAT} <<ENDSQL | ${MYSQL} -u ${USER} -p${PASS} -B -D ${USERDB} -h ${EXACT_TARGET_DATABASE_CLIENT} > ${OUTFILE_PATH}

SELECT
  u.uid,
  username,
  email,
  u.shortLocaleID AS 'Language',
  l.iso_alpha2 AS 'Country', 
  l.state_shortform AS "State",
  IF(n.uid is NULL, "N","Y") AS subscribed,
  a.lastLogin AS lastlogin,
  u.userJoinDate AS joindate,
  IF(max(deactivationDate) IS NULL, "", 
  max(deactivationDate)) AS lastSubEndDate, 
  IF(max(deactivationDate) < CURRENT_DATE() OR  max(deactivationDate) IS NULL, "N", "Y") AS IsCurrentlyPaid, 
  IF(n.uid is NULL,"Unsubscribed","Active") AS 'subscriberStatus' 
  FROM user u
  INNER JOIN profile_locations p ON p.profileID = u.uid
  INNER JOIN locations_fulltext l ON (l.id= p.locationID AND l.depth = 3 and l.seed_flag='M')
  INNER JOIN as_search a ON a.uid = u.uid
  INNER JOIN user_email_verification uev ON u.uid = uev.uid
  LEFT OUTER join notification_user n ON n.uid = u.uid and ntypID=2 
  LEFT OUTER join billing_subscription b ON u.uid = b.uid   
WHERE 
a.abuse = 0 AND
a.lastLogin > NOW() - INTERVAL 730 DAY AND
uevIsVerified = 'Y' AND 
email != '' AND
NOT isnull(email) 
GROUP BY uid;
    
ENDSQL

## Less Dumb Hack.  Still slightly dumb.

/bin/sed 's/\t/","/g;s/^/"/;s/$/"/;s/\n//g' ${OUTFILE_PATH} > ${OUTFILE}.out 

if [ -e ${OUTFILE}.out ] ; then
    echo "Encrypting the email list." >> $LOG
    ${GPG} -a --encrypt -r info@exacttarget.com ${OUTFILE}.out >> $LOG
else 
    echo "${OUTFILE_PATH} was not able to be written." >> $LOG
    exit;
fi

${MV} ${OUTFILE_PATH}.out.asc ${OUTFILE_PATH}.gpg >> $LOG

if [ -e ${OUTFILE}.gpg ] ; then
    echo "Sending email list to ExactTarget." >> $LOG
    echo "put ${OUTFILE_PATH}.gpg" | ${SFTP} ${EXACT_USER}@ftp1.exacttarget.com:/Import
    ${CP} ${LOG} ${PATH}/current_log
else 
    echo "GPG file not created." >> $LOG
    exit;
fi

echo " " >> $LOG
echo "END $APPNAME `${DATE_CMD}`" >> $LOG
